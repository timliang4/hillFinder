'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var fetch = _interopDefault(require('node-fetch'));
var FormData = _interopDefault(require('form-data'));

function _regeneratorRuntime() {
  _regeneratorRuntime = function () {
    return e;
  };
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function (t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function (t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw new Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(typeof e + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) r.push(n);
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function (e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
    },
    stop: function () {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function (e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw new Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function (t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function (t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function (t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    catch: function (t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function (e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

var Oauth = /*#__PURE__*/function () {
  function Oauth() {}
  var _proto = Oauth.prototype;
  _proto.refreshTokens = /*#__PURE__*/function () {
    var _refreshTokens = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(token) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (token) {
              _context.next = 2;
              break;
            }
            throw new Error('No token provided');
          case 2:
            _context.next = 4;
            return Oauth.oauthRequest(new URLSearchParams({
              client_id: token.client_id,
              client_secret: token.client_secret,
              refresh_token: token.refresh_token,
              grant_type: 'refresh_token'
            }));
          case 4:
            return _context.abrupt("return", _context.sent);
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    function refreshTokens(_x) {
      return _refreshTokens.apply(this, arguments);
    }
    return refreshTokens;
  }();
  Oauth.tokenExchange = /*#__PURE__*/function () {
    var _tokenExchange = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(config, code) {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (code) {
              _context2.next = 2;
              break;
            }
            throw new Error('No code provided');
          case 2:
            _context2.next = 4;
            return Oauth.oauthRequest(new URLSearchParams({
              client_id: config.client_id,
              client_secret: config.client_secret,
              code: code,
              grant_type: 'authorization_code'
            }));
          case 4:
            return _context2.abrupt("return", _context2.sent);
          case 5:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    function tokenExchange(_x2, _x3) {
      return _tokenExchange.apply(this, arguments);
    }
    return tokenExchange;
  }();
  Oauth.oauthRequest = /*#__PURE__*/function () {
    var _oauthRequest = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(body) {
      var response;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return fetch("https://www.strava.com/oauth/token", {
              body: body,
              method: 'post'
            });
          case 2:
            response = _context3.sent;
            if (response.ok) {
              _context3.next = 5;
              break;
            }
            throw response;
          case 5:
            _context3.next = 7;
            return response.json();
          case 7:
            return _context3.abrupt("return", _context3.sent);
          case 8:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    function oauthRequest(_x4) {
      return _oauthRequest.apply(this, arguments);
    }
    return oauthRequest;
  }();
  return Oauth;
}();

var Request = /*#__PURE__*/function () {
  function Request(config, token) {
    this.config = config;
    this.token = token;
    this.oauth = new Oauth();
  }
  var _proto = Request.prototype;
  _proto.getAccessToken = /*#__PURE__*/function () {
    var _getAccessToken = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var _this$token, _this$config$on_token, _this$config, token;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!(!this.token || this.token.expires_at < new Date().getTime() / 1000)) {
              _context.next = 6;
              break;
            }
            _context.next = 3;
            return this.oauth.refreshTokens({
              client_id: this.config.client_id,
              client_secret: this.config.client_secret,
              refresh_token: ((_this$token = this.token) == null ? void 0 : _this$token.refresh_token) || this.config.refresh_token
            });
          case 3:
            token = _context.sent;
            this.token = token;
            (_this$config$on_token = (_this$config = this.config).on_token_refresh) == null || _this$config$on_token.call(_this$config, token);
          case 6:
            return _context.abrupt("return", this.token.access_token);
          case 7:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function getAccessToken() {
      return _getAccessToken.apply(this, arguments);
    }
    return getAccessToken;
  }();
  _proto.makeApiRequest = /*#__PURE__*/function () {
    var _makeApiRequest = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(method, uri, params) {
      var token, query, headers, body, response;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            _context2.t0 = params == null ? void 0 : params.access_token;
            if (_context2.t0) {
              _context2.next = 5;
              break;
            }
            _context2.next = 4;
            return this.getAccessToken();
          case 4:
            _context2.t0 = _context2.sent;
          case 5:
            token = _context2.t0;
            query = params != null && params.query && Object.keys(params.query).length ? "?" + new URLSearchParams(params == null ? void 0 : params.query) : '';
            headers = _extends({
              Authorization: "Bearer " + token,
              'content-type': 'application/json'
            }, params != null && params.headers ? params.headers : {});
            if (params != null && params.body) {
              if (headers['content-type'] === 'application/json') body = JSON.stringify(params.body);else body = params.body;
            }
            _context2.next = 11;
            return fetch("https://www.strava.com/api/v3" + uri + query, {
              body: body,
              method: method,
              headers: headers
            });
          case 11:
            response = _context2.sent;
            if (response.ok) {
              _context2.next = 14;
              break;
            }
            throw response;
          case 14:
            if (!(response.status !== 204)) {
              _context2.next = 18;
              break;
            }
            _context2.next = 17;
            return response.json();
          case 17:
            return _context2.abrupt("return", _context2.sent);
          case 18:
            return _context2.abrupt("return", response);
          case 19:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function makeApiRequest(_x, _x2, _x3) {
      return _makeApiRequest.apply(this, arguments);
    }
    return makeApiRequest;
  }();
  return Request;
}();

var _excluded = ["id"],
  _excluded2 = ["id"],
  _excluded3 = ["id"],
  _excluded4 = ["id"],
  _excluded5 = ["id"],
  _excluded6 = ["id"],
  _excluded7 = ["id"];
var Activities = /*#__PURE__*/function () {
  function Activities(request) {
    this.request = request;
  }
  var _proto = Activities.prototype;
  _proto.createActivity = /*#__PURE__*/function () {
    var _createActivity = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, access_token) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return this.request.makeApiRequest('post', '/activities', {
              body: params,
              access_token: access_token
            });
          case 2:
            return _context.abrupt("return", _context.sent);
          case 3:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function createActivity(_x, _x2) {
      return _createActivity.apply(this, arguments);
    }
    return createActivity;
  }();
  _proto.getActivityById = /*#__PURE__*/function () {
    var _getActivityById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded);
            _context2.next = 3;
            return this.request.makeApiRequest('get', "/activities/" + id, {
              query: query,
              access_token: access_token
            });
          case 3:
            return _context2.abrupt("return", _context2.sent);
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getActivityById(_x3, _x4) {
      return _getActivityById.apply(this, arguments);
    }
    return getActivityById;
  }();
  _proto.getCommentsByActivityId = /*#__PURE__*/function () {
    var _getCommentsByActivityId = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded2);
            _context3.next = 3;
            return this.request.makeApiRequest('get', "/activities/" + id + "/comments", {
              query: query,
              access_token: access_token
            });
          case 3:
            return _context3.abrupt("return", _context3.sent);
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function getCommentsByActivityId(_x5, _x6) {
      return _getCommentsByActivityId.apply(this, arguments);
    }
    return getCommentsByActivityId;
  }();
  _proto.getKudoersByActivityId = /*#__PURE__*/function () {
    var _getKudoersByActivityId = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded3);
            _context4.next = 3;
            return this.request.makeApiRequest('get', "/activities/" + id + "/kudos", {
              query: query,
              access_token: access_token
            });
          case 3:
            return _context4.abrupt("return", _context4.sent);
          case 4:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function getKudoersByActivityId(_x7, _x8) {
      return _getKudoersByActivityId.apply(this, arguments);
    }
    return getKudoersByActivityId;
  }();
  _proto.getLapsByActivityId = /*#__PURE__*/function () {
    var _getLapsByActivityId = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(params) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded4);
            _context5.next = 3;
            return this.request.makeApiRequest('get', "/activities/" + id + "/laps", {
              query: query
            });
          case 3:
            return _context5.abrupt("return", _context5.sent);
          case 4:
          case "end":
            return _context5.stop();
        }
      }, _callee5, this);
    }));
    function getLapsByActivityId(_x9) {
      return _getLapsByActivityId.apply(this, arguments);
    }
    return getLapsByActivityId;
  }();
  _proto.getPhotosByActivityId = /*#__PURE__*/function () {
    var _getPhotosByActivityId = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded5);
            _context6.next = 3;
            return this.request.makeApiRequest('get', "/activities/" + id + "/photos", {
              query: query,
              access_token: access_token
            });
          case 3:
            return _context6.abrupt("return", _context6.sent);
          case 4:
          case "end":
            return _context6.stop();
        }
      }, _callee6, this);
    }));
    function getPhotosByActivityId(_x10, _x11) {
      return _getPhotosByActivityId.apply(this, arguments);
    }
    return getPhotosByActivityId;
  }();
  _proto.getLoggedInAthleteActivities = /*#__PURE__*/function () {
    var _getLoggedInAthleteActivities = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(params) {
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return this.request.makeApiRequest('get', '/athlete/activities', {
              query: params
            });
          case 2:
            return _context7.abrupt("return", _context7.sent);
          case 3:
          case "end":
            return _context7.stop();
        }
      }, _callee7, this);
    }));
    function getLoggedInAthleteActivities(_x12) {
      return _getLoggedInAthleteActivities.apply(this, arguments);
    }
    return getLoggedInAthleteActivities;
  }();
  _proto.getZonesByActivityId = /*#__PURE__*/function () {
    var _getZonesByActivityId = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded6);
            _context8.next = 3;
            return this.request.makeApiRequest('get', "/activities/" + id + "/zones", {
              query: query,
              access_token: access_token
            });
          case 3:
            return _context8.abrupt("return", _context8.sent);
          case 4:
          case "end":
            return _context8.stop();
        }
      }, _callee8, this);
    }));
    function getZonesByActivityId(_x13, _x14) {
      return _getZonesByActivityId.apply(this, arguments);
    }
    return getZonesByActivityId;
  }();
  _proto.updateActivityById = /*#__PURE__*/function () {
    var _updateActivityById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(params, access_token) {
      var id, body;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            id = params.id, body = _objectWithoutPropertiesLoose(params, _excluded7);
            _context9.next = 3;
            return this.request.makeApiRequest('put', "/activities/" + id, {
              body: body,
              access_token: access_token
            });
          case 3:
            return _context9.abrupt("return", _context9.sent);
          case 4:
          case "end":
            return _context9.stop();
        }
      }, _callee9, this);
    }));
    function updateActivityById(_x15, _x16) {
      return _updateActivityById.apply(this, arguments);
    }
    return updateActivityById;
  }();
  return Activities;
}();

var Athletes = /*#__PURE__*/function () {
  function Athletes(request) {
    this.request = request;
  }
  var _proto = Athletes.prototype;
  _proto.getLoggedInAthlete = /*#__PURE__*/function () {
    var _getLoggedInAthlete = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(access_token) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return this.request.makeApiRequest('get', '/athlete', {
              access_token: access_token
            });
          case 2:
            return _context.abrupt("return", _context.sent);
          case 3:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function getLoggedInAthlete(_x) {
      return _getLoggedInAthlete.apply(this, arguments);
    }
    return getLoggedInAthlete;
  }();
  _proto.getLoggedInAthleteZones = /*#__PURE__*/function () {
    var _getLoggedInAthleteZones = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(access_token) {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return this.request.makeApiRequest('get', '/athlete/zones', {
              access_token: access_token
            });
          case 2:
            return _context2.abrupt("return", _context2.sent);
          case 3:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getLoggedInAthleteZones(_x2) {
      return _getLoggedInAthleteZones.apply(this, arguments);
    }
    return getLoggedInAthleteZones;
  }();
  _proto.getStats = /*#__PURE__*/function () {
    var _getStats = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params, access_token) {
      var id;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            id = params.id;
            _context3.next = 3;
            return this.request.makeApiRequest('get', "/athletes/" + id + "/stats", {
              access_token: access_token
            });
          case 3:
            return _context3.abrupt("return", _context3.sent);
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function getStats(_x3, _x4) {
      return _getStats.apply(this, arguments);
    }
    return getStats;
  }();
  _proto.updateLoggedInAthlete = /*#__PURE__*/function () {
    var _updateLoggedInAthlete = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params, access_token) {
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return this.request.makeApiRequest('put', "/athlete", {
              body: params,
              access_token: access_token
            });
          case 2:
            return _context4.abrupt("return", _context4.sent);
          case 3:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function updateLoggedInAthlete(_x5, _x6) {
      return _updateLoggedInAthlete.apply(this, arguments);
    }
    return updateLoggedInAthlete;
  }();
  return Athletes;
}();

var _excluded$1 = ["id"],
  _excluded2$1 = ["id"],
  _excluded3$1 = ["id"];
var Clubs = /*#__PURE__*/function () {
  function Clubs(request) {
    this.request = request;
  }
  var _proto = Clubs.prototype;
  _proto.getClubActivitiesById = /*#__PURE__*/function () {
    var _getClubActivitiesById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded$1);
            _context.next = 3;
            return this.request.makeApiRequest('get', "/clubs/" + id + "/activities", {
              query: query,
              access_token: access_token
            });
          case 3:
            return _context.abrupt("return", _context.sent);
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function getClubActivitiesById(_x, _x2) {
      return _getClubActivitiesById.apply(this, arguments);
    }
    return getClubActivitiesById;
  }();
  _proto.getClubAdminsById = /*#__PURE__*/function () {
    var _getClubAdminsById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded2$1);
            _context2.next = 3;
            return this.request.makeApiRequest('get', "/clubs/" + id + "/admins", {
              query: query,
              access_token: access_token
            });
          case 3:
            return _context2.abrupt("return", _context2.sent);
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getClubAdminsById(_x3, _x4) {
      return _getClubAdminsById.apply(this, arguments);
    }
    return getClubAdminsById;
  }();
  _proto.getClubById = /*#__PURE__*/function () {
    var _getClubById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {
      var id;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            id = params.id;
            _context3.next = 3;
            return this.request.makeApiRequest('get', "/clubs/" + id);
          case 3:
            return _context3.abrupt("return", _context3.sent);
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function getClubById(_x5) {
      return _getClubById.apply(this, arguments);
    }
    return getClubById;
  }();
  _proto.getClubMembersById = /*#__PURE__*/function () {
    var _getClubMembersById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded3$1);
            _context4.next = 3;
            return this.request.makeApiRequest('get', "/clubs/" + id + "/members", {
              query: query,
              access_token: access_token
            });
          case 3:
            return _context4.abrupt("return", _context4.sent);
          case 4:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function getClubMembersById(_x6, _x7) {
      return _getClubMembersById.apply(this, arguments);
    }
    return getClubMembersById;
  }();
  _proto.getLoggedInAthleteClubs = /*#__PURE__*/function () {
    var _getLoggedInAthleteClubs = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(params, access_token) {
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return this.request.makeApiRequest('get', '/athlete/clubs', {
              query: params,
              access_token: access_token
            });
          case 2:
            return _context5.abrupt("return", _context5.sent);
          case 3:
          case "end":
            return _context5.stop();
        }
      }, _callee5, this);
    }));
    function getLoggedInAthleteClubs(_x8, _x9) {
      return _getLoggedInAthleteClubs.apply(this, arguments);
    }
    return getLoggedInAthleteClubs;
  }();
  return Clubs;
}();

var Gears = /*#__PURE__*/function () {
  function Gears(request) {
    this.request = request;
  }
  var _proto = Gears.prototype;
  _proto.getGearById = /*#__PURE__*/function () {
    var _getGearById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, access_token) {
      var id;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            id = params.id;
            _context.next = 3;
            return this.request.makeApiRequest('get', "/gear/" + id, {
              access_token: access_token
            });
          case 3:
            return _context.abrupt("return", _context.sent);
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function getGearById(_x, _x2) {
      return _getGearById.apply(this, arguments);
    }
    return getGearById;
  }();
  return Gears;
}();

var _excluded$2 = ["id"];
var Routes = /*#__PURE__*/function () {
  function Routes(request) {
    this.request = request;
  }
  var _proto = Routes.prototype;
  _proto.getRouteAsGPX = /*#__PURE__*/function () {
    var _getRouteAsGPX = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, access_token) {
      var id;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            id = params.id;
            _context.next = 3;
            return this.request.makeApiRequest('get', "/routes/" + id + "/export_gpx", {
              access_token: access_token
            });
          case 3:
            return _context.abrupt("return", _context.sent);
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function getRouteAsGPX(_x, _x2) {
      return _getRouteAsGPX.apply(this, arguments);
    }
    return getRouteAsGPX;
  }();
  _proto.getRouteAsTCX = /*#__PURE__*/function () {
    var _getRouteAsTCX = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, access_token) {
      var id;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            id = params.id;
            _context2.next = 3;
            return this.request.makeApiRequest('get', "/routes/" + id + "/export_tcx", {
              access_token: access_token
            });
          case 3:
            return _context2.abrupt("return", _context2.sent);
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getRouteAsTCX(_x3, _x4) {
      return _getRouteAsTCX.apply(this, arguments);
    }
    return getRouteAsTCX;
  }();
  _proto.getRouteById = /*#__PURE__*/function () {
    var _getRouteById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {
      var id;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            id = params.id;
            _context3.next = 3;
            return this.request.makeApiRequest('get', "/routes/" + id);
          case 3:
            return _context3.abrupt("return", _context3.sent);
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function getRouteById(_x5) {
      return _getRouteById.apply(this, arguments);
    }
    return getRouteById;
  }();
  _proto.getRoutesByAthleteId = /*#__PURE__*/function () {
    var _getRoutesByAthleteId = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded$2);
            _context4.next = 3;
            return this.request.makeApiRequest('get', "/athletes/" + id + "/routes", {
              query: query
            });
          case 3:
            return _context4.abrupt("return", _context4.sent);
          case 4:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function getRoutesByAthleteId(_x6) {
      return _getRoutesByAthleteId.apply(this, arguments);
    }
    return getRoutesByAthleteId;
  }();
  return Routes;
}();

var RunningRaces = /*#__PURE__*/function () {
  function RunningRaces(request) {
    this.request = request;
  }
  var _proto = RunningRaces.prototype;
  _proto.getRunningRaceById = /*#__PURE__*/function () {
    var _getRunningRaceById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, access_token) {
      var id;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            id = params.id;
            _context.next = 3;
            return this.request.makeApiRequest('get', "/running_races/" + id, {
              access_token: access_token
            });
          case 3:
            return _context.abrupt("return", _context.sent);
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function getRunningRaceById(_x, _x2) {
      return _getRunningRaceById.apply(this, arguments);
    }
    return getRunningRaceById;
  }();
  _proto.getRunningRaces = /*#__PURE__*/function () {
    var _getRunningRaces = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, access_token) {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return this.request.makeApiRequest('get', '/running_races', {
              query: params,
              access_token: access_token
            });
          case 2:
            return _context2.abrupt("return", _context2.sent);
          case 3:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getRunningRaces(_x3, _x4) {
      return _getRunningRaces.apply(this, arguments);
    }
    return getRunningRaces;
  }();
  return RunningRaces;
}();

var SegmentEfforts = /*#__PURE__*/function () {
  function SegmentEfforts(request) {
    this.request = request;
  }
  var _proto = SegmentEfforts.prototype;
  _proto.getEffortsBySegmentId = /*#__PURE__*/function () {
    var _getEffortsBySegmentId = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, access_token) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return this.request.makeApiRequest('get', '/segment_efforts', {
              query: params,
              access_token: access_token
            });
          case 2:
            return _context.abrupt("return", _context.sent);
          case 3:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function getEffortsBySegmentId(_x, _x2) {
      return _getEffortsBySegmentId.apply(this, arguments);
    }
    return getEffortsBySegmentId;
  }();
  _proto.getSegmentEffortById = /*#__PURE__*/function () {
    var _getSegmentEffortById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, access_token) {
      var id;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            id = params.id;
            _context2.next = 3;
            return this.request.makeApiRequest('get', "/segment_efforts/" + id, {
              access_token: access_token
            });
          case 3:
            return _context2.abrupt("return", _context2.sent);
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getSegmentEffortById(_x3, _x4) {
      return _getSegmentEffortById.apply(this, arguments);
    }
    return getSegmentEffortById;
  }();
  return SegmentEfforts;
}();

var _excluded$3 = ["id"];
var Segments = /*#__PURE__*/function () {
  function Segments(request) {
    this.request = request;
  }
  var _proto = Segments.prototype;
  _proto.exploreSegments = /*#__PURE__*/function () {
    var _exploreSegments = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, access_token) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return this.request.makeApiRequest('get', '/segments/explore', {
              query: params,
              access_token: access_token
            });
          case 2:
            return _context.abrupt("return", _context.sent);
          case 3:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function exploreSegments(_x, _x2) {
      return _exploreSegments.apply(this, arguments);
    }
    return exploreSegments;
  }();
  _proto.getLoggedInAthleteStarredSegments = /*#__PURE__*/function () {
    var _getLoggedInAthleteStarredSegments = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params) {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return this.request.makeApiRequest('get', '/segments/starred', {
              query: params
            });
          case 2:
            return _context2.abrupt("return", _context2.sent);
          case 3:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getLoggedInAthleteStarredSegments(_x3) {
      return _getLoggedInAthleteStarredSegments.apply(this, arguments);
    }
    return getLoggedInAthleteStarredSegments;
  }();
  _proto.getSegmentById = /*#__PURE__*/function () {
    var _getSegmentById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params, access_token) {
      var id;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            id = params.id;
            _context3.next = 3;
            return this.request.makeApiRequest('get', "/segments/" + id, {
              access_token: access_token
            });
          case 3:
            return _context3.abrupt("return", _context3.sent);
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function getSegmentById(_x4, _x5) {
      return _getSegmentById.apply(this, arguments);
    }
    return getSegmentById;
  }();
  _proto.starSegment = /*#__PURE__*/function () {
    var _starSegment = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params, access_token) {
      var id, body;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            id = params.id, body = _objectWithoutPropertiesLoose(params, _excluded$3);
            _context4.next = 3;
            return this.request.makeApiRequest('put', "/segments/" + id + "/starred", {
              body: body,
              access_token: access_token
            });
          case 3:
            return _context4.abrupt("return", _context4.sent);
          case 4:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function starSegment(_x6, _x7) {
      return _starSegment.apply(this, arguments);
    }
    return starSegment;
  }();
  return Segments;
}();

var _excluded$4 = ["id"],
  _excluded2$2 = ["id"],
  _excluded3$2 = ["id"];
var Streams = /*#__PURE__*/function () {
  function Streams(request) {
    this.request = request;
  }
  var _proto = Streams.prototype;
  _proto.getActivityStreams = /*#__PURE__*/function () {
    var _getActivityStreams = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded$4);
            _context.next = 3;
            return this.request.makeApiRequest('get', "/activities/" + id + "/streams", {
              query: _extends({}, query, {
                key_by_type: true
              }),
              access_token: access_token
            });
          case 3:
            return _context.abrupt("return", _context.sent);
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function getActivityStreams(_x, _x2) {
      return _getActivityStreams.apply(this, arguments);
    }
    return getActivityStreams;
  }();
  _proto.getRouteStreams = /*#__PURE__*/function () {
    var _getRouteStreams = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, access_token) {
      var id;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            id = params.id;
            _context2.next = 3;
            return this.request.makeApiRequest('get', "/routes/" + id + "/streams", {
              access_token: access_token
            });
          case 3:
            return _context2.abrupt("return", _context2.sent);
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getRouteStreams(_x3, _x4) {
      return _getRouteStreams.apply(this, arguments);
    }
    return getRouteStreams;
  }();
  _proto.getSegmentEffortStreams = /*#__PURE__*/function () {
    var _getSegmentEffortStreams = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded2$2);
            _context3.next = 3;
            return this.request.makeApiRequest('get', "/segment_efforts/" + id + "/streams", {
              query: _extends({}, query, {
                key_by_type: true
              }),
              access_token: access_token
            });
          case 3:
            return _context3.abrupt("return", _context3.sent);
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function getSegmentEffortStreams(_x5, _x6) {
      return _getSegmentEffortStreams.apply(this, arguments);
    }
    return getSegmentEffortStreams;
  }();
  _proto.getSegmentStreams = /*#__PURE__*/function () {
    var _getSegmentStreams = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params, access_token) {
      var id, query;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            id = params.id, query = _objectWithoutPropertiesLoose(params, _excluded3$2);
            _context4.next = 3;
            return this.request.makeApiRequest('get', "/segments/" + id + "/streams", {
              query: _extends({}, query, {
                key_by_type: true
              }),
              access_token: access_token
            });
          case 3:
            return _context4.abrupt("return", _context4.sent);
          case 4:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function getSegmentStreams(_x7, _x8) {
      return _getSegmentStreams.apply(this, arguments);
    }
    return getSegmentStreams;
  }();
  return Streams;
}();

var Subscriptions = /*#__PURE__*/function () {
  function Subscriptions(request) {
    this.request = request;
  }
  var _proto = Subscriptions.prototype;
  _proto.createSubscription = /*#__PURE__*/function () {
    var _createSubscription = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", this.request.makeApiRequest('post', '/push_subscriptions', {
              body: _extends({}, params, {
                client_id: this.request.config.client_id,
                client_secret: this.request.config.client_secret
              })
            }));
          case 1:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function createSubscription(_x) {
      return _createSubscription.apply(this, arguments);
    }
    return createSubscription;
  }();
  _proto.deleteSubscription = /*#__PURE__*/function () {
    var _deleteSubscription = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", this.request.makeApiRequest('delete', "/push_subscriptions/" + id, {
              body: {
                client_id: this.request.config.client_id,
                client_secret: this.request.config.client_secret
              }
            }));
          case 1:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function deleteSubscription(_x2) {
      return _deleteSubscription.apply(this, arguments);
    }
    return deleteSubscription;
  }();
  _proto.getSubscriptions = /*#__PURE__*/function () {
    var _getSubscriptions = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", this.request.makeApiRequest('get', '/push_subscriptions', {
              query: {
                client_id: this.request.config.client_id,
                client_secret: this.request.config.client_secret
              }
            }));
          case 1:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function getSubscriptions() {
      return _getSubscriptions.apply(this, arguments);
    }
    return getSubscriptions;
  }();
  return Subscriptions;
}();

var Uploads = /*#__PURE__*/function () {
  function Uploads(request) {
    this.request = request;
  }
  var _proto = Uploads.prototype;
  _proto.createUpload = /*#__PURE__*/function () {
    var _createUpload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {
      var form, headers;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            form = new FormData();
            Object.entries(params).forEach(function (_ref) {
              var key = _ref[0],
                value = _ref[1];
              form.append(key, value);
            });
            headers = _extends({}, form.getHeaders(), {
              'content-length': 0,
              host: 'www.strava.com'
            });
            form.getLength(function (error, length) {
              if (error) throw error;
              headers['content-length'] = length;
            });
            return _context.abrupt("return", this.request.makeApiRequest('post', '/uploads', {
              body: form,
              headers: headers
            }));
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function createUpload(_x) {
      return _createUpload.apply(this, arguments);
    }
    return createUpload;
  }();
  _proto.getUploadById = /*#__PURE__*/function () {
    var _getUploadById = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, access_token) {
      var uploadId;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            uploadId = params.uploadId;
            _context2.next = 3;
            return this.request.makeApiRequest('get', "/uploads/" + uploadId, {
              access_token: access_token
            });
          case 3:
            return _context2.abrupt("return", _context2.sent);
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function getUploadById(_x2, _x3) {
      return _getUploadById.apply(this, arguments);
    }
    return getUploadById;
  }();
  return Uploads;
}();

(function (ActivityZoneType) {
  ActivityZoneType["Heartrate"] = "heartrate";
  ActivityZoneType["Power"] = "power";
})(exports.ActivityZoneType || (exports.ActivityZoneType = {}));

(function (FollowerStatus) {
  FollowerStatus["Pending"] = "pending";
  FollowerStatus["Accepted"] = "accepted";
  FollowerStatus["Blocked"] = "blocked";
})(exports.FollowerStatus || (exports.FollowerStatus = {}));

(function (Membership) {
  Membership["Member"] = "member";
  Membership["Pending"] = "pending";
})(exports.Membership || (exports.Membership = {}));

(function (ResourceState) {
  ResourceState[ResourceState["Meta"] = 1] = "Meta";
  ResourceState[ResourceState["Summary"] = 2] = "Summary";
  ResourceState[ResourceState["Detail"] = 3] = "Detail";
})(exports.ResourceState || (exports.ResourceState = {}));

(function (RouteType) {
  RouteType[RouteType["Ride"] = 1] = "Ride";
  RouteType[RouteType["Run"] = 2] = "Run";
})(exports.RouteType || (exports.RouteType = {}));

(function (RouteSubType) {
  RouteSubType[RouteSubType["Road"] = 1] = "Road";
  RouteSubType[RouteSubType["MountainBike"] = 2] = "MountainBike";
  RouteSubType[RouteSubType["Cross"] = 3] = "Cross";
  RouteSubType[RouteSubType["Trail"] = 4] = "Trail";
  RouteSubType[RouteSubType["Mixed"] = 5] = "Mixed";
})(exports.RouteSubType || (exports.RouteSubType = {}));

(function (Sex) {
  Sex["Female"] = "F";
  Sex["Male"] = "M";
})(exports.Sex || (exports.Sex = {}));

(function (UnitSystem) {
  UnitSystem["Feet"] = "feet";
  UnitSystem["Meters"] = "meters";
})(exports.UnitSystem || (exports.UnitSystem = {}));

var ActivityType;
(function (ActivityType) {
  ActivityType["Ride"] = "Ride";
  ActivityType["Run"] = "Run";
})(ActivityType || (ActivityType = {}));

var ClimbCategoryDesc;
(function (ClimbCategoryDesc) {
  ClimbCategoryDesc["NC"] = "NC";
  ClimbCategoryDesc["ONE"] = "1";
  ClimbCategoryDesc["TWO"] = "2";
  ClimbCategoryDesc["THREE"] = "3";
  ClimbCategoryDesc["FOUR"] = "4";
  ClimbCategoryDesc["HC"] = "HC";
})(ClimbCategoryDesc || (ClimbCategoryDesc = {}));

var ActivityType$1;
(function (ActivityType) {
  ActivityType["Ride"] = "Ride";
  ActivityType["Run"] = "Run";
})(ActivityType$1 || (ActivityType$1 = {}));

var Strava = /*#__PURE__*/function () {
  function Strava(config, access_token) {
    this.request = new Request(config, access_token);
    this.activities = new Activities(this.request);
    this.athletes = new Athletes(this.request);
    this.clubs = new Clubs(this.request);
    this.gears = new Gears(this.request);
    this.oauth = this.request.oauth;
    this.routes = new Routes(this.request);
    this.runningRaces = new RunningRaces(this.request);
    this.segmentEfforts = new SegmentEfforts(this.request);
    this.segments = new Segments(this.request);
    this.streams = new Streams(this.request);
    this.subscriptions = new Subscriptions(this.request);
    this.uploads = new Uploads(this.request);
  }
  Strava.createFromTokenExchange = /*#__PURE__*/function () {
    var _createFromTokenExchange = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(config, code) {
      var tokenExchangeResponse;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return Oauth.tokenExchange(config, code);
          case 2:
            tokenExchangeResponse = _context.sent;
            config.on_token_refresh == null || config.on_token_refresh(tokenExchangeResponse);
            return _context.abrupt("return", new Strava(config, tokenExchangeResponse));
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    function createFromTokenExchange(_x, _x2) {
      return _createFromTokenExchange.apply(this, arguments);
    }
    return createFromTokenExchange;
  }();
  return Strava;
}();

exports.Strava = Strava;
//# sourceMappingURL=strava.cjs.development.js.map
